auth {
	/*
	 * user: the user@host allowed to connect. Multiple user
	 * lines are permitted within each auth {} block.
	 */
	user = "*@localhost";

	/* password: an optional password that is required to use this block. */
	password = "{{ oper_login_pass }}";

	/*
	 * encrypted: indicates whether the auth password above has been
	 * encrypted. Default is 'no' if nothing else is specified.
	 */
	encrypted = yes;

	/*
	 * spoof: fake the user's host to this. This is free-form; just do
	 * everyone a favor and don't abuse it. ('=' prefix on /stats I)
	 */
	spoof = "{{ oper_spoof_host }}";

	/* class: the class the user is placed in. */
	class = "opers";

	/*
	 * need_password - don't allow users who haven't supplied the correct  | ('&' prefix on /stats I if disabled)
	 *                 password to connect using another auth {} block
	 * need_ident    - require the user to have identd to connect          | ('+' prefix on /stats I)
	 * spoof_notice  - enable spoofing notification to admins
	 * exceed_limit  - allow a user to exceed class limits                 | ('>' prefix on /stats I)
	 * kline_exempt  - exempt this user from k-lines                       | ('^' prefix on /stats I)
	 * xline_exempt  - exempt this user from x-lines                       | ('!' prefix on /stats I)
	 * resv_exempt   - exempt this user from resvs                         | ('$' prefix on /stats I)
	 * no_tilde      - remove ~ from a user with no ident                  | ('-' prefix on /stats I)
	 * can_flood     - allow this user to exceed flood limits              | ('|' prefix on /stats I)
	 * webirc        - enables WEBIRC authentication for web-based         | ('<' prefix on /stats I)
	 *                 clients such as Mibbit
	 */
	flags = need_password, spoof_notice, exceed_limit, kline_exempt,
		xline_exempt, resv_exempt, no_tilde, can_flood;
};

auth {
	user = "*@*";
	class = "users";
	//flags = need_ident;
	{{% if user_login_pass %}}
	password = "{{ user_login_pass }}";
	{{% endif %}}
};