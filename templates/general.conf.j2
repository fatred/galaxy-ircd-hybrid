general {
	/*
	 * cycle_on_host_change: sends a fake QUIT/JOIN combination
	 * when services change the hostname of a specific client.
	 */
	cycle_on_host_change = yes;

	/* max_watch: maximum WATCH entries a client can have. */
	max_watch = 50;

	/* max_accept: maximum allowed /accept's for +g user mode. */
	max_accept = 50;

	/* whowas_history_length: maximum length of the WHOWAS nick name history. */
	whowas_history_length = 15000;

	/*
	 * dline_min_cidr: the minimum required length of a CIDR bitmask
	 * for IPv4 based D-lines.
	 */
	dline_min_cidr = 16;

	/*
	 * dline_min_cidr6: the minimum required length of a CIDR bitmask
	 * for IPv6 based D-lines.
	 */
	dline_min_cidr6 = 48;

	/*
	 * kline_min_cidr: the minimum required length of a CIDR bitmask
	 * for IPv4 based K-lines.
	 */
	kline_min_cidr = 16;

	/*
	 * kline_min_cidr6: the minimum required length of a CIDR bitmask
	 * for IPv6 based K-lines.
	 */
	kline_min_cidr6 = 48;

	/*
	 * invisible_on_connect: whether to automatically set user mode +i
	 * on connecting users.
	 */
	invisible_on_connect = yes;

	/*
	 * kill_chase_time_limit: KILL chasing is a feature whereby a KILL
	 * issued for a user who has recently changed nickname will be applied
	 * automatically to the new nick. kill_chase_time_limit is the maximum
	 * time following a nickname change that this chasing will apply.
	 */
	kill_chase_time_limit = 30 seconds;

	/*
	 * ignore_bogus_ts: ignore bogus timestamps from other servers.
	 * Yes, this will desync the network, but it will allow chanops
	 * to resync with a valid non TS 0.
	 *
	 * This should be enabled network wide, or not at all.
	 */
	ignore_bogus_ts = no;

	/*
	 * disable_auth: completely disable ident lookups; if you enable this,
	 * be careful of what you set need_ident to in your auth {} blocks.
	 */
	disable_auth = {{ disable_ident_lookup }};

	/*
	 * tkline_expire_notices: enables or disables temporary kline/xline
	 * expire notices.
	 */
	tkline_expire_notices = no;

	/*
	 * default_floodcount: the default value of floodcount that is configurable
	 * via /quote set floodcount. This is the number of lines a user may send
	 * to any other user/channel per floodtime. Set to 0 to disable.
	 */
	default_floodcount = 10;

	/*
	 * default_floodtime: the default value of floodtime that is configurable
	 * via /quote set floodtime.
	 */
	default_floodtime = 1 second;

	/*
	 * failed_oper_notice: send a notice to all opers on the server when
	 * someone tries to OPER and uses the wrong password, host or ident.
	 */
	failed_oper_notice = yes;

	/*
	 * dots_in_ident: the number of '.' characters permitted in an ident
	 * reply before the user is rejected.
	 */
	dots_in_ident = 2;

	/*
	 * min_nonwildcard: the minimum number of non-wildcard characters in
	 * k/d lines placed via the server. K-lines hand-placed are exempt from
	 * this limit.
	 * Wildcard characters: '.', ':', '*', '?'
	 */
	min_nonwildcard = 4;

	/*
	 * min_nonwildcard_simple: the minimum number of non-wildcard characters
	 * in gecos bans. Wildcard characters: '*', '?'
	 */
	min_nonwildcard_simple = 3;

	/* anti_nick_flood: enable the nickflood control code. */
	anti_nick_flood = yes;

	/*
	 * max_nick_changes, max_nick_time: the number of nick changes allowed in
	 * the specified period.
	 */
	max_nick_changes = 5;
	max_nick_time = 20 seconds;

	/*
	 * away_count, away_time: how many AWAY commands are permitted per
	 * client per away_time.
	 */
	away_count = 2;
	away_time = 10 seconds;

	/*
	 * anti_spam_exit_message_time: the minimum time a user must be connected
	 * before custom PART/QUIT messages are allowed.
	 */
	anti_spam_exit_message_time = 5 minutes;

	/*
	 * ts_warn_delta, ts_max_delta: the time delta allowed between server
	 * clocks before a warning is given, or before the link is dropped.
	 * All servers should run ntpdate/rdate to keep clocks in sync.
	 */
	ts_warn_delta = 3 seconds;
	ts_max_delta = 15 seconds;

	/*
	 * warn_no_connect_block: warn opers about servers that try to connect
	 * but for which we don't have a connect {} block. Twits with
	 * misconfigured servers can become really annoying with this enabled.
	 */
	warn_no_connect_block = yes;

	/*
	 * stats_e_disabled: set this to 'yes' to disable "STATS e" for both
	 * operators and administrators. Doing so is a good idea in case
	 * there are any exempted (exempt {}) server IP addresses you don't
	 * want to see leaked.
	 */
	stats_e_disabled = no;

	/* stats_m_oper_only: make /stats m/M (messages) oper only. */
	stats_m_oper_only = yes;

	/* stats_o_oper_only: make stats o (opers) oper only. */
	stats_o_oper_only = yes;

	/* stats_P_oper_only: make stats P (ports) oper only. */
	stats_P_oper_only = yes;

	/* stats_u_oper_only: make stats u (uptime) oper only. */
	stats_u_oper_only = no;

	/*
	 * stats_i_oper_only: make stats i (auth {}) oper only. Set to:
	 *     yes    - show users no auth {} blocks, made oper only
	 *     masked - show users the first matching auth {} block
	 *     no     - show users all auth {} blocks
	 */
	stats_i_oper_only = yes;

	/*
	 * stats_k_oper_only: make stats k/K (klines) oper only. Set to:
	 *     yes    - show users no klines, made oper only
	 *     masked - show users the first matching kline
	 *     no     - show users all klines
	 */
	stats_k_oper_only = yes;

	/*
	 * caller_id_wait: time between notifying a +g user that somebody
	 * is messaging them.
	 */
	caller_id_wait = 1 minute;

	/*
	 * opers_bypass_callerid: allows operators to bypass +g and message
	 * anyone who has it set.
	 */
	opers_bypass_callerid = yes;

	/*
	 * pace_wait_simple: minimum time required between use of less
	 * intensive commands
	 * (ADMIN, HELP, LUSERS, VERSION, remote WHOIS)
	 */
	pace_wait_simple = 1 second;

	/*
	 * pace_wait: minimum time required between use of more intensive commands
	 * (INFO, LINKS, MAP, MOTD, STATS, WHO, WHOWAS)
	 */
	pace_wait = 10 seconds;

	/*
	 * short_motd: send clients a notice telling them to read the MOTD
	 * instead of forcing an MOTD to clients who may simply ignore it.
	 */
	short_motd = no;

	/*
	 * ping_cookie: require clients to respond exactly to a PING command,
	 * can help block certain types of drones and FTP PASV mode spoofing.
	 */
	ping_cookie = no;

	/* no_oper_flood: increase flood limits for opers. */
	no_oper_flood = yes;

	/*
	 * max_targets: the maximum number of targets in a single
	 * PRIVMSG/NOTICE. Set to 999 NOT 0 for unlimited.
	 */
	max_targets = 4;

	/*
	 * user modes configurable: a list of user modes for the options below
	 *
	 * +b - bots         - See bot and drone flooding notices
	 * +c - cconn        - Client connection/quit notices
	 * +D - deaf         - Don't receive channel messages
	 * +d - debug        - See debugging notices
	 * +e - external     - See remote server connection and split notices
	 * +F - farconnect   - Remote client connection/quit notices
	 * +f - full         - See auth {} block full notices
	 * +G - softcallerid - Server Side Ignore for users not on your channels
	 * +g - callerid     - Server Side Ignore (for privmsgs etc)
	 * +H - hidden       - Hides IRC operator status to other users
	 * +i - invisible    - Not shown in NAMES or WHO unless you share a channel
	 * +j - rej          - See rejected client notices
	 * +k - skill        - See server generated KILL messages
	 * +l - locops       - See LOCOPS messages
	 * +n - nchange      - See client nick changes
	 * +p - hidechans    - Hides channel list in WHOIS
	 * +q - hideidle     - Hides idle and signon time in WHOIS
	 * +R - nononreg     - Only receive private messages from registered clients
	 * +s - servnotice   - See general server notices
	 * +u - unauth       - See unauthorized client notices
	 * +w - wallop       - See server generated WALLOPS
	 * +y - spy          - See LINKS, STATS, TRACE notices etc.
	 */

	/* oper_only_umodes: user modes only operators may set. */
	oper_only_umodes = bots, cconn, debug, external, farconnect, full, hidden,
			locops, nchange, rej, skill, spy, unauth;

	/* oper_umodes: default user modes operators get when they successfully OPER. */
	oper_umodes = bots, locops, servnotice, wallop;

	/*
	 * throttle_count: the maximum number of connections from the same
	 * IP address allowed in throttle_time duration.
	 */
	throttle_count = 1;

	/*
	 * throttle_time: the minimum amount of time required between
	 * connections from the same IP address. exempt {} blocks are
	 * excluded from this throttling.
	 * Offers protection against flooders who reconnect quickly.
	 * Set to 0 to disable.
	 */
	throttle_time = 2 seconds;
};
